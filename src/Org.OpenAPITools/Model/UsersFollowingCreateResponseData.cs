// <auto-generated>
/*
 * Twitter API v2
 *
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.128
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UsersFollowingCreateResponseData
    /// </summary>
    public partial class UsersFollowingCreateResponseData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UsersFollowingCreateResponseData" /> class.
        /// </summary>
        /// <param name="following">following</param>
        /// <param name="pendingFollow">pendingFollow</param>
        [JsonConstructor]
        public UsersFollowingCreateResponseData(Option<bool?> following = default, Option<bool?> pendingFollow = default)
        {
            FollowingOption = following;
            PendingFollowOption = pendingFollow;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Following
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> FollowingOption { get; private set; }

        /// <summary>
        /// Gets or Sets Following
        /// </summary>
        [JsonPropertyName("following")]
        public bool? Following { get { return this.FollowingOption; } set { this.FollowingOption = new(value); } }

        /// <summary>
        /// Used to track the state of PendingFollow
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> PendingFollowOption { get; private set; }

        /// <summary>
        /// Gets or Sets PendingFollow
        /// </summary>
        [JsonPropertyName("pending_follow")]
        public bool? PendingFollow { get { return this.PendingFollowOption; } set { this.PendingFollowOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UsersFollowingCreateResponseData {\n");
            sb.Append("  Following: ").Append(Following).Append("\n");
            sb.Append("  PendingFollow: ").Append(PendingFollow).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="UsersFollowingCreateResponseData" />
    /// </summary>
    public class UsersFollowingCreateResponseDataJsonConverter : JsonConverter<UsersFollowingCreateResponseData>
    {
        /// <summary>
        /// Deserializes json to <see cref="UsersFollowingCreateResponseData" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override UsersFollowingCreateResponseData Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> following = default;
            Option<bool?> pendingFollow = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "following":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                following = new Option<bool?>(utf8JsonReader.GetBoolean());
                            break;
                        case "pending_follow":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                pendingFollow = new Option<bool?>(utf8JsonReader.GetBoolean());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (following.IsSet && following.Value == null)
                throw new ArgumentNullException(nameof(following), "Property is not nullable for class UsersFollowingCreateResponseData.");

            if (pendingFollow.IsSet && pendingFollow.Value == null)
                throw new ArgumentNullException(nameof(pendingFollow), "Property is not nullable for class UsersFollowingCreateResponseData.");

            return new UsersFollowingCreateResponseData(following, pendingFollow);
        }

        /// <summary>
        /// Serializes a <see cref="UsersFollowingCreateResponseData" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="usersFollowingCreateResponseData"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, UsersFollowingCreateResponseData usersFollowingCreateResponseData, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, usersFollowingCreateResponseData, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="UsersFollowingCreateResponseData" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="usersFollowingCreateResponseData"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, UsersFollowingCreateResponseData usersFollowingCreateResponseData, JsonSerializerOptions jsonSerializerOptions)
        {
            if (usersFollowingCreateResponseData.FollowingOption.IsSet)
                writer.WriteBoolean("following", usersFollowingCreateResponseData.FollowingOption.Value!.Value);

            if (usersFollowingCreateResponseData.PendingFollowOption.IsSet)
                writer.WriteBoolean("pending_follow", usersFollowingCreateResponseData.PendingFollowOption.Value!.Value);
        }
    }
}
